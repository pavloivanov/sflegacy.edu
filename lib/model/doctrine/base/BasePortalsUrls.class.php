<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PortalsUrls', 'doctrine');

/**
 * BasePortalsUrls
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $url
 * @property Doctrine_Collection $Statistics
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getTitle()      Returns the current record's "title" value
 * @method string              getUrl()        Returns the current record's "url" value
 * @method Doctrine_Collection getStatistics() Returns the current record's "Statistics" collection
 * @method PortalsUrls         setId()         Sets the current record's "id" value
 * @method PortalsUrls         setTitle()      Sets the current record's "title" value
 * @method PortalsUrls         setUrl()        Sets the current record's "url" value
 * @method PortalsUrls         setStatistics() Sets the current record's "Statistics" collection
 * 
 * @package    development
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePortalsUrls extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('portals_urls');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Statistics', array(
             'local' => 'id',
             'foreign' => 'portals_urls_id'));
    }
}